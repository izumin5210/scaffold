// Code generated by MockGen. DO NOT EDIT.
// Source: get_scaffolds.go

package usecase

import (
	gomock "github.com/golang/mock/gomock"
	scaffold "github.com/izumin5210/scaffold/domain/scaffold"
	reflect "reflect"
)

// MockGetScaffoldsUseCase is a mock of GetScaffoldsUseCase interface
type MockGetScaffoldsUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockGetScaffoldsUseCaseMockRecorder
}

// MockGetScaffoldsUseCaseMockRecorder is the mock recorder for MockGetScaffoldsUseCase
type MockGetScaffoldsUseCaseMockRecorder struct {
	mock *MockGetScaffoldsUseCase
}

// NewMockGetScaffoldsUseCase creates a new mock instance
func NewMockGetScaffoldsUseCase(ctrl *gomock.Controller) *MockGetScaffoldsUseCase {
	mock := &MockGetScaffoldsUseCase{ctrl: ctrl}
	mock.recorder = &MockGetScaffoldsUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockGetScaffoldsUseCase) EXPECT() *MockGetScaffoldsUseCaseMockRecorder {
	return _m.recorder
}

// Perform mocks base method
func (_m *MockGetScaffoldsUseCase) Perform() ([]scaffold.Scaffold, error) {
	ret := _m.ctrl.Call(_m, "Perform")
	ret0, _ := ret[0].([]scaffold.Scaffold)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Perform indicates an expected call of Perform
func (_mr *MockGetScaffoldsUseCaseMockRecorder) Perform() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Perform", reflect.TypeOf((*MockGetScaffoldsUseCase)(nil).Perform))
}
