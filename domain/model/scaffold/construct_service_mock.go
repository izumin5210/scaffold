// Code generated by MockGen. DO NOT EDIT.
// Source: construct_service.go

package scaffold

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockConstructService is a mock of ConstructService interface
type MockConstructService struct {
	ctrl     *gomock.Controller
	recorder *MockConstructServiceMockRecorder
}

// MockConstructServiceMockRecorder is the mock recorder for MockConstructService
type MockConstructServiceMockRecorder struct {
	mock *MockConstructService
}

// NewMockConstructService creates a new mock instance
func NewMockConstructService(ctrl *gomock.Controller) *MockConstructService {
	mock := &MockConstructService{ctrl: ctrl}
	mock.recorder = &MockConstructServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockConstructService) EXPECT() *MockConstructServiceMockRecorder {
	return _m.recorder
}

// Perform mocks base method
func (_m *MockConstructService) Perform(rootPath string, sc Scaffold, v interface{}, cb ConstructCallback, cCb ConstructConflictedCallback) error {
	ret := _m.ctrl.Call(_m, "Perform", rootPath, sc, v, cb, cCb)
	ret0, _ := ret[0].(error)
	return ret0
}

// Perform indicates an expected call of Perform
func (_mr *MockConstructServiceMockRecorder) Perform(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Perform", reflect.TypeOf((*MockConstructService)(nil).Perform), arg0, arg1, arg2, arg3, arg4)
}
