package main

import (
	"fmt"
	"log"
	"os"
	"path/filepath"

	"github.com/izumin5210/scaffold/app"
	"github.com/izumin5210/scaffold/app/usecase"
	"github.com/izumin5210/scaffold/infra/fs"
	"github.com/mitchellh/cli"
)

var (
	// Name is application name
	Name string
	// Version is application version
	Version string
	// Revision describes current commit hash generated by `git describe --always`.
	Revision string
)

func main() {
	ctx := getContext()
	u := usecase.NewGetScaffoldCommandUseCase(ctx.Repository(), ctx.CommandFactoryFactory())
	// TODO: Should handle errors
	scffCmds, _ := u.Perform()

	c := cli.NewCLI(Name, fmt.Sprintf("%s (%s)", Version, Revision))
	c.Args = os.Args[1:]
	c.Commands = scffCmds

	exitStatus, err := c.Run()
	if err != nil {
		log.Println(err)
	}

	os.Exit(exitStatus)
}

func getContext() app.Context {
	// TODO: Should handle errors
	cw, _ := os.Getwd()
	return app.NewContext(cw, filepath.Join(cw, ".scaffold"), fs.New())
}
